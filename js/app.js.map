{"version":3,"sources":["app.js","basic-regex-page.js","etsy-api.js","etsy-page.js","move-item-page.js","move-snap-page.js","reorder-items-page.js","routing-page.js","variadic-page.js","init.js"],"names":["app","basicRegexPage","someString","result","replace","console","log","match","Number","EtsyApi","spec","apiKey","Error","baseUrl","apiVersion","self","listings","url","promise","$","Deferred","req","getJSON","done","data","ok","resolve","reject","userDetail","etsyPage","api","listTemplate","_","template","html","variable","items","results","fail","status","err","text","error","moveItemPage","mousedown","e","moveItem","item","css","top","pageY","shiftY","left","pageX","shiftX","stopTracking","off","this","position","on","moveSnapPage","gridSize","Math","floor","offset","reorderItemsPage","assignNumbers","each","index","cancelTextSelection","preventDefault","shouldMoveUp","y","prev","shouldMoveDown","next","height","reorder","insertBefore","insertAfter","doneReordering","removeClass","document","addClass","routingPage","showUsers","get","showUser","username","name","processHash","hash","location","r","run","slice","Rlite","add","params","window","addEventListener","variadicPage","fmtString","str","args","arguments","num","page"],"mappings":"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","file":"app.js","sourcesContent":["// The namespace for this application\nvar app = {};\n","app.basicRegexPage = function () {\n\n  // Here's a string...\n  var someString = 'Hello, I am 39 years old.';\n\n  // Here, we are using regular expressions to\n  // find the first numeric value in the string\n  // and replace it with 35\n  var result = someString.replace(/[0-9]+/, 35);\n\n  // Will log 'Hello, I am 35 years old.'\n  console.log(result);\n\n  // Here, we are using regular expressions to\n  // find the first numeric value in the string\n  // and replace it with 'over ' + whatever the\n  // numeric value was\n  result = someString.replace(/[0-9]+/, function (match) {\n    return 'over ' + match;\n  });\n\n  // Will log 'Hello, I am over 35 years old.'\n  console.log(result);\n\n  // Here, we are using regular expressions to\n  // find the first numeric value in the string\n  // and replace it with itself plus one\n  result = someString.replace(/[0-9]+/, function (match) {\n    return Number(match) + 1;\n  });\n\n  // Will log 'Hello, I am over 40 years old.'\n  console.log(result);\n\n  // var emailRegex = (/[a-z]+@[a-z]+\\.[a-z]{2,4}/);\n  // var matches = 'foo@bar.com zdadfae'.match(emailRegex);\n  // console.log(matches);\n\n  // These are really just rudimentary examples.\n  // Regex is uuber powerful. If you haven't already,\n  // go here and read all about em:\n  //\n  // http://codular.com/regex\n};\n","app.EtsyApi = function (spec) {\n  if (!spec.apiKey) {\n    throw new Error('An API key is required!');\n  }\n\n  var baseUrl = 'https://openapi.etsy.com/' + (spec.apiVersion || 'v2');\n\n  var self = {\n    listings: function () {\n      var url = baseUrl + '/listings/active.js?includes=MainImage&api_key=' + spec.apiKey + '&callback=?';\n      var promise = $.Deferred();\n\n      var req = $.getJSON(url).done(function (data) {\n        if (!data.ok) {\n          // Keep our rejection in line with the standard jQuery\n          // rejection, passing req as first argument, status as second\n          // and error object as the third\n          promise.reject(req, 'Unknown error', data);\n        } else {\n          promise.resolve(data);\n        }\n      });\n\n      return promise;\n    },\n\n    userDetail: function (userId) {\n      /* TODO: Call the Etsy profile API */\n    }\n  };\n\n  return self;\n};\n","app.etsyPage = function () {\n  var api = app.EtsyApi({ apiKey: 'jgeqmbakgybo48lww24232km' });\n  var listTemplate = _.template($('#etsyList').html(), { variable: 'm' });\n\n  api.listings()\n    .done(function (data) {\n      // Let's put the data in the console so we can\n      // explore it...\n      console.log(data);\n      $('.main-content').html(listTemplate({ items: data.results }));\n    })\n    .fail(function (req, status, err) {\n      console.log(err);\n      $('.main-content').text(err.error);\n    });\n};\n","// An intro to using mouse events to move items\n// on the page\napp.moveItemPage = function () {\n  // When our draggable item is clicked:\n  $('.draggable-item').mousedown(function (e) {\n    // Get the item that is being dragged\n    var item = $(this);\n\n    // Get the item's position relative to the document\n    var position = item.position();\n\n    // Compute the offset of the mouse cusor in the\n    // element, so if we click the middle of the element\n    // we move the middle of the element, rather than\n    // the top-left corner.\n    var shiftX = e.pageX - position.left;\n    var shiftY = e.pageY - position.top;\n\n    // When the mouse moves, move the item\n    $('body').on('mousemove', moveItem);\n\n    // When the mouse button is released, drop the item\n    $('body').on('mouseup', stopTracking);\n\n    // Moves the item\n    function moveItem(e) {\n      // Set the item's top and left coordinate\n      // based on the mouse position\n      item.css({\n        top: e.pageY - shiftY,\n        left: e.pageX - shiftX\n      });\n    }\n\n    // Unbind our body-level mouse events so we\n    // don't run out of memory!\n    function stopTracking() {\n      $('body').off('mousemove', moveItem);\n      $('body').off('mouseup', stopTracking);\n    }\n  });\n};\n","// Nearly the same as the move-item demo, but\n// adding in the ability to snap items\napp.moveSnapPage = function () {\n  // Snap the item to a grid of 20px x 20px\n  var gridSize = 20;\n\n  // When our draggable item is clicked:\n  $('.draggable-item').mousedown(function (e) {\n    // Get the item that is being dragged\n    var item = $(this);\n\n    // Get the item's position relative to the document\n    var offset = item.position();\n\n    // Compute the offset of the mouse cusor in the\n    // element, so if we click the middle of the element\n    // we move the middle of the element, rather than\n    // the top-left corner.\n    var shiftX = e.pageX - offset.left;\n    var shiftY = e.pageY - offset.top;\n\n    // When the mouse moves, move the item\n    $('body').on('mousemove', moveItem);\n\n    // When the mouse button is released, drop the item\n    $('body').on('mouseup', stopTracking);\n\n    // Moves the item\n    function moveItem(e) {\n      // Set the item's top and left coordinate\n      // based on the mouse position\n      item.css({\n        top: Math.floor((e.pageY - shiftY) / gridSize) * gridSize,\n        left: Math.floor((e.pageX - shiftX) / gridSize) * gridSize\n      });\n    }\n\n    // Unbind our body-level mouse events so we\n    // don't run out of memory!\n    function stopTracking() {\n      $('body').off('mousemove', moveItem);\n      $('body').off('mouseup', stopTracking);\n    }\n  });\n};\n","// A demo showing how you might reorder items in a\n// list using drag/drop\napp.reorderItemsPage = function () {\n\n  function assignNumbers() {\n    $('.item-num').each(function (index, item) {\n      $(item).text(index + 1);\n    });\n  }\n\n  assignNumbers();\n\n  // Bind to any reorderable list items\n  $('.reorderable-list-item').mousedown(function (e) {\n    // Get the item we are moving\n    var item = $(this);\n\n    // Give it a class to make it look distinct\n    item.addClass('reordering-list-item');\n\n    // Disable text selection when dragging\n    $(document).on('selectstart dragstart', cancelTextSelection);\n\n    // When the mouse is up, we are all done!\n    $('body').on('mouseup', doneReordering);\n\n    // When the mouse moves, look into reordering\n    $('body').on('mousemove', reorder);\n\n    // Jus cancels the event\n    function cancelTextSelection(e) {\n      e.preventDefault();\n      return false;\n    }\n\n    // Determine if the specified mouse-y coordinate\n    // should make us perform a move up\n    function shouldMoveUp(y) {\n      var offset = item.prev().offset();\n\n      return (offset && offset.top > y);\n    }\n\n    // Determine if the specified mouse-y coordinate\n    // should make us perform a move down\n    function shouldMoveDown(y) {\n      var next = item.next();\n      var offset = next.offset();\n\n      return offset && offset.top + next.height() < y;\n    }\n\n    // The mouse is moving... check to see if we need\n    // to reorder things, and if so, reorder!\n    function reorder(e) {\n      if (shouldMoveUp(e.pageY)) {\n        item.insertBefore(item.prev());\n      } else if (shouldMoveDown(e.pageY)) {\n        item.insertAfter(item.next());\n      }\n    }\n\n    // Clean up all of our event binding when the drag\n    // /reorder is completed\n    function doneReordering() {\n      assignNumbers();\n      item.removeClass('reordering-list-item');\n      $('body').off('mouseup', doneReordering);\n      $('body').off('mousemove', reorder);\n      $(document).off('selectstart dragstart', cancelTextSelection);\n    }\n  });\n};\n","app.routingPage = function () {\n\n  // Our router\n  var r = Rlite();\n\n  // Default route\n  r.add('', showUsers);\n\n  // #users\n  r.add('users', showUsers);\n\n  // #users/chris -> r.params.name will equal 'chris'\n  r.add('users/:name', function (r) {\n    showUser(r.params.name);\n  });\n\n  function showUsers() {\n    $.get('views/users.html').done(function (html) {\n      $('.main-content').html(html);\n    });\n  }\n\n  function showUser(username) {\n    $.get('views/user.html').done(function (html) {\n      var template = _.template(html, { variable: 'm' });\n\n      $('.main-content').html(template({ name: username }));\n    });\n  }\n\n  // Hash-based routing\n  function processHash() {\n    var hash = location.hash || '#';\n    r.run(hash.slice(1));\n  }\n\n  window.addEventListener('hashchange', processHash);\n  processHash();\n\n  // TODO: We could improve this in many ways.\n  //\n  // One, every time we go to the #users or #users/foo route,\n  // we are requesting the HTML again. We ought to cache them,\n  // instead into an object (or hash table).\n  //\n  // Another thing, is we are recompiling the user.html template\n  // every time we show a user... We could cache the compiled\n  // templates, too, so they are compiled once they are downloaded\n  // and never again!\n};\n","app.variadicPage = function () {\n\n  // First of all, what the eff is a variadic function?\n  //\n  // It's not too complicated. It's a function that can\n  // take any number of arguments.\n  //\n  // Second of all, even though I'm using regular expressions\n  // in this example, in reality, regex and variadic\n  // functions are two unrelated technologies.\n  //\n  // So, how does one write a variadic function?\n\n\n  // fmtString behaves similarly to the string.format method\n  // in most C-style languages (C#, Java, etc). It takes a\n  // string as its first argument, and then any number of\n  // other arguments may follow that.\n  //\n  // Calling it thus:\n  //\n  // fmtString('Hey, {1}, I think {0}', 'you are swell!', 'class')\n  //\n  // Will return the string:\n  // 'Hey, class, I think you are swell!'\n  function fmtString(str) {\n    // Arguments is an implicit local variable that is baked into\n    // every function. It behaves like an array, but it is *not* an\n    // array.\n    //\n    // It has a .length property, and it can be accessed like this:\n    // arguments[0] << in this case, arguments[0] is the same as str\n    // arguments[1] << the second argument passed to this function\n    // arguments[2] << the third argument passed to this function, etc\n    //\n    // If you want to convert arguments to an array, you can just do\n    // this: [].slice.call(arguments)\n    //\n    // Here, we are caching arguments into a local variable so we\n    // can refer to it from a nested function (see below).\n    var args = arguments;\n\n    // Here, we're going to replace any pattern that looks like\n    // {number} with the appropriate argument...\n    //\n    // Here's what this says:\n    // Find any opening { if it is followed by one or more numbers\n    // and then followed by a }.\n    //\n    // The /g says, find all of them, not just the first one.\n    //\n    // Here's a handy tool to visualize what it's doing:\n    // http://jex.im/regulex/#!embed=false&flags=&re=%7B(%5B0-9%5D%2B)%7D\n    return str.replace(/{([0-9]+)}/g, function (match, num) {\n      // Here, match will be something like '{1}'\n      // In which case, num will be '1'\n      //\n      // Anything matched within a () in a regular expression\n      // will is called a group, and matching groups are passed\n      // along to this function\n      return args[Number(num) + 1];\n    });\n  }\n\n  // Here, you can see that we are calling fmtString with 3 arguments\n  console.log(fmtString('Hello, {0} what is your {1}?', 'Chris', 'birthday'));\n\n  // Here, you can see that we call it with 4... Veriadic functions\n  // are teh hotness.\n  console.log(fmtString('Phone ({0}) {1}-{2}', '843', '321', '3245'));\n};\n","$(function () {\n  var page = $('body').data('page');\n  app[page]();\n});\n"],"sourceRoot":"/source/"}