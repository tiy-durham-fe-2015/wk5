{"version":3,"sources":["app.js","move-item-page.js","move-snap-page.js","reorder-items-page.js","init.js"],"names":["app","moveItemPage","$","mousedown","e","moveItem","item","css","top","pageY","shiftY","left","pageX","shiftX","stopTracking","off","this","offset","position","on","moveSnapPage","gridSize","Math","floor","reorderItemsPage","cancelTextSelection","preventDefault","shouldMoveUp","y","prev","shouldMoveDown","next","height","reorder","insertBefore","insertAfter","doneReordering","removeClass","document","addClass","page","data"],"mappings":"AACA,GAAAA,OCCAA,KAAAC,aAAA,WAEAC,EAAA,mBAAAC,UAAA,SAAAC,GAqBA,QAAAC,GAAAD,GAGAE,EAAAC,KACAC,IAAAJ,EAAAK,MAAAC,EACAC,KAAAP,EAAAQ,MAAAC,IAMA,QAAAC,KACAZ,EAAA,QAAAa,IAAA,YAAAV,GACAH,EAAA,QAAAa,IAAA,UAAAD,GAhCA,GAAAR,GAAAJ,EAAAc,MAGAC,EAAAX,EAAAY,WAMAL,EAAAT,EAAAQ,MAAAK,EAAAN,KACAD,EAAAN,EAAAK,MAAAQ,EAAAT,GAGAN,GAAA,QAAAiB,GAAA,YAAAd,GAGAH,EAAA,QAAAiB,GAAA,UAAAL,MCpBAd,IAAAoB,aAAA,WAEA,GAAAC,GAAA,EAGAnB,GAAA,mBAAAC,UAAA,SAAAC,GAqBA,QAAAC,GAAAD,GAGAE,EAAAC,KACAC,IAAAc,KAAAC,OAAAnB,EAAAK,MAAAC,GAAAW,GAAAA,EACAV,KAAAW,KAAAC,OAAAnB,EAAAQ,MAAAC,GAAAQ,GAAAA,IAMA,QAAAP,KACAZ,EAAA,QAAAa,IAAA,YAAAV,GACAH,EAAA,QAAAa,IAAA,UAAAD,GAhCA,GAAAR,GAAAJ,EAAAc,MAGAC,EAAAX,EAAAY,WAMAL,EAAAT,EAAAQ,MAAAK,EAAAN,KACAD,EAAAN,EAAAK,MAAAQ,EAAAT,GAGAN,GAAA,QAAAiB,GAAA,YAAAd,GAGAH,EAAA,QAAAiB,GAAA,UAAAL,MCvBAd,IAAAwB,iBAAA,WAEAtB,EAAA,0BAAAC,UAAA,WAiBA,QAAAsB,GAAArB,GAEA,MADAA,GAAAsB,kBACA,EAKA,QAAAC,GAAAC,GACA,GAAAX,GAAAX,EAAAuB,OAAAZ,QAEA,OAAAA,IAAAA,EAAAT,IAAAoB,EAKA,QAAAE,GAAAF,GACA,GAAAG,GAAAzB,EAAAyB,OACAd,EAAAc,EAAAd,QAEA,OAAAA,IAAAA,EAAAT,IAAAuB,EAAAC,SAAAJ,EAKA,QAAAK,GAAA7B,GAOA,MANAuB,GAAAvB,EAAAK,OACAH,EAAA4B,aAAA5B,EAAAuB,QACAC,EAAA1B,EAAAK,QACAH,EAAA6B,YAAA7B,EAAAyB,SAGA,EAKA,QAAAK,KACA9B,EAAA+B,YAAA,wBACAnC,EAAA,QAAAa,IAAA,UAAAqB,GACAlC,EAAA,QAAAa,IAAA,YAAAkB,GACA/B,EAAAoC,UAAAvB,IAAA,wBAAAU,GAvDA,GAAAnB,GAAAJ,EAAAc,KAGAV,GAAAiC,SAAA,wBAGArC,EAAAoC,UAAAnB,GAAA,wBAAAM,GAGAvB,EAAA,QAAAiB,GAAA,UAAAiB,GAGAlC,EAAA,QAAAiB,GAAA,YAAAc,MClBA/B,EAAA,WACA,GAAAsC,GAAAtC,EAAA,QAAAuC,KAAA,OACAzC,KAAAwC","file":"app.js","sourcesContent":["// The namespace for this application\nvar app = {};\n","// An intro to using mouse events to move items\n// on the page\napp.moveItemPage = function () {\n  // When our draggable item is clicked:\n  $('.draggable-item').mousedown(function (e) {\n    // Get the item that is being dragged\n    var item = $(this);\n\n    // Get the item's position relative to the document\n    var offset = item.position();\n\n    // Compute the offset of the mouse cusor in the\n    // element, so if we click the middle of the element\n    // we move the middle of the element, rather than\n    // the top-left corner.\n    var shiftX = e.pageX - offset.left;\n    var shiftY = e.pageY - offset.top;\n\n    // When the mouse moves, move the item\n    $('body').on('mousemove', moveItem);\n\n    // When the mouse button is released, drop the item\n    $('body').on('mouseup', stopTracking);\n\n    // Moves the item\n    function moveItem(e) {\n      // Set the item's top and left coordinate\n      // based on the mouse position\n      item.css({\n        top: e.pageY - shiftY,\n        left: e.pageX - shiftX\n      });\n    }\n\n    // Unbind our body-level mouse events so we\n    // don't run out of memory!\n    function stopTracking() {\n      $('body').off('mousemove', moveItem);\n      $('body').off('mouseup', stopTracking);\n    }\n  });\n};\n","// Nearly the same as the move-item demo, but\n// adding in the ability to snap items\napp.moveSnapPage = function () {\n  // Snap the item to a grid of 20px x 20px\n  var gridSize = 20;\n\n  // When our draggable item is clicked:\n  $('.draggable-item').mousedown(function (e) {\n    // Get the item that is being dragged\n    var item = $(this);\n\n    // Get the item's position relative to the document\n    var offset = item.position();\n\n    // Compute the offset of the mouse cusor in the\n    // element, so if we click the middle of the element\n    // we move the middle of the element, rather than\n    // the top-left corner.\n    var shiftX = e.pageX - offset.left;\n    var shiftY = e.pageY - offset.top;\n\n    // When the mouse moves, move the item\n    $('body').on('mousemove', moveItem);\n\n    // When the mouse button is released, drop the item\n    $('body').on('mouseup', stopTracking);\n\n    // Moves the item\n    function moveItem(e) {\n      // Set the item's top and left coordinate\n      // based on the mouse position\n      item.css({\n        top: Math.floor((e.pageY - shiftY) / gridSize) * gridSize,\n        left: Math.floor((e.pageX - shiftX) / gridSize) * gridSize\n      });\n    }\n\n    // Unbind our body-level mouse events so we\n    // don't run out of memory!\n    function stopTracking() {\n      $('body').off('mousemove', moveItem);\n      $('body').off('mouseup', stopTracking);\n    }\n  });\n};\n","// A demo showing how you might reorder items in a\n// list using drag/drop\napp.reorderItemsPage = function () {\n  // Bind to any reorderable list items\n  $('.reorderable-list-item').mousedown(function (e) {\n    // Get the item we are moving\n    var item = $(this);\n\n    // Give it a class to make it look distinct\n    item.addClass('reordering-list-item');\n\n    // Disable text selection when dragging\n    $(document).on('selectstart dragstart', cancelTextSelection);\n\n    // When the mouse is up, we are all done!\n    $('body').on('mouseup', doneReordering);\n\n    // When the mouse moves, look into reordering\n    $('body').on('mousemove', reorder);\n\n    // Jus cancels the event\n    function cancelTextSelection(e) {\n      e.preventDefault();\n      return false;\n    }\n\n    // Determine if the specified mouse-y coordinate\n    // should make us perform a move up\n    function shouldMoveUp(y) {\n      var offset = item.prev().offset();\n\n      return offset && offset.top > y;\n    }\n\n    // Determine if the specified mouse-y coordinate\n    // should make us perform a move down\n    function shouldMoveDown(y) {\n      var next = item.next();\n      var offset = next.offset();\n\n      return offset && offset.top + next.height() < y;\n    }\n\n    // The mouse is moving... check to see if we need\n    // to reorder things, and if so, reorder!\n    function reorder(e) {\n      if (shouldMoveUp(e.pageY)) {\n        item.insertBefore(item.prev());\n      } else if (shouldMoveDown(e.pageY)) {\n        item.insertAfter(item.next());\n      }\n\n      return false;\n    }\n\n    // Clean up all of our event binding when the drag\n    // /reorder is completed\n    function doneReordering() {\n      item.removeClass('reordering-list-item');\n      $('body').off('mouseup', doneReordering);\n      $('body').off('mousemove', reorder);\n      $(document).off('selectstart dragstart', cancelTextSelection);\n    }\n  });\n};\n","$(function () {\n  var page = $('body').data('page');\n  app[page]();\n});\n"],"sourceRoot":"/source/"}