{"version":3,"sources":["app.js","etsy-api.js","etsy-page.js","move-item-page.js","move-snap-page.js","reorder-items-page.js","routing-page.js","init.js"],"names":["app","EtsyApi","spec","apiKey","Error","baseUrl","apiVersion","self","listings","url","promise","$","Deferred","req","getJSON","done","data","ok","resolve","reject","userDetail","etsyPage","api","listTemplate","_","template","html","variable","console","log","items","results","fail","status","err","text","error","moveItemPage","mousedown","e","moveItem","item","css","top","pageY","shiftY","left","pageX","shiftX","stopTracking","off","this","offset","position","on","moveSnapPage","gridSize","Math","floor","reorderItemsPage","cancelTextSelection","preventDefault","shouldMoveUp","y","prev","shouldMoveDown","next","height","reorder","insertBefore","insertAfter","doneReordering","removeClass","document","addClass","routingPage","showUsers","get","showUser","username","name","processHash","hash","location","r","run","slice","Rlite","add","params","window","addEventListener","page"],"mappings":"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","file":"app.js","sourcesContent":["// The namespace for this application\nvar app = {};\n","app.EtsyApi = function (spec) {\n  if (!spec.apiKey) {\n    throw new Error('An API key is required!');\n  }\n\n  var baseUrl = 'https://openapi.etsy.com/' + (spec.apiVersion || 'v2');\n\n  var self = {\n    listings: function () {\n      var url = baseUrl + '/listings/active.js?includes=MainImage&api_key=' + spec.apiKey + '&callback=?';\n      var promise = $.Deferred();\n\n      var req = $.getJSON(url).done(function (data) {\n        if (!data.ok) {\n          // Keep our rejection in line with the standard jQuery\n          // rejection, passing req as first argument, status as second\n          // and error object as the third\n          promise.reject(req, 'Unknown error', data);\n        } else {\n          promise.resolve(data);\n        }\n      });\n\n      return promise;\n    },\n\n    userDetail: function (userId) {\n      /* TODO: Call the Etsy profile API */\n    }\n  };\n\n  return self;\n};\n","app.etsyPage = function () {\n  var api = app.EtsyApi({ apiKey: 'jgeqmbakgybo48lww24232km' });\n  var listTemplate = _.template($('#etsyList').html(), { variable: 'm' });\n\n  api.listings()\n    .done(function (data) {\n      // Let's put the data in the console so we can\n      // explore it...\n      console.log(data);\n      $('.main-content').html(listTemplate({ items: data.results }));\n    })\n    .fail(function (req, status, err) {\n      console.log(err);\n      $('.main-content').text(err.error);\n    });\n};\n","// An intro to using mouse events to move items\n// on the page\napp.moveItemPage = function () {\n  // When our draggable item is clicked:\n  $('.draggable-item').mousedown(function (e) {\n    // Get the item that is being dragged\n    var item = $(this);\n\n    // Get the item's position relative to the document\n    var offset = item.position();\n\n    // Compute the offset of the mouse cusor in the\n    // element, so if we click the middle of the element\n    // we move the middle of the element, rather than\n    // the top-left corner.\n    var shiftX = e.pageX - offset.left;\n    var shiftY = e.pageY - offset.top;\n\n    // When the mouse moves, move the item\n    $('body').on('mousemove', moveItem);\n\n    // When the mouse button is released, drop the item\n    $('body').on('mouseup', stopTracking);\n\n    // Moves the item\n    function moveItem(e) {\n      // Set the item's top and left coordinate\n      // based on the mouse position\n      item.css({\n        top: e.pageY - shiftY,\n        left: e.pageX - shiftX\n      });\n    }\n\n    // Unbind our body-level mouse events so we\n    // don't run out of memory!\n    function stopTracking() {\n      $('body').off('mousemove', moveItem);\n      $('body').off('mouseup', stopTracking);\n    }\n  });\n};\n","// Nearly the same as the move-item demo, but\n// adding in the ability to snap items\napp.moveSnapPage = function () {\n  // Snap the item to a grid of 20px x 20px\n  var gridSize = 20;\n\n  // When our draggable item is clicked:\n  $('.draggable-item').mousedown(function (e) {\n    // Get the item that is being dragged\n    var item = $(this);\n\n    // Get the item's position relative to the document\n    var offset = item.position();\n\n    // Compute the offset of the mouse cusor in the\n    // element, so if we click the middle of the element\n    // we move the middle of the element, rather than\n    // the top-left corner.\n    var shiftX = e.pageX - offset.left;\n    var shiftY = e.pageY - offset.top;\n\n    // When the mouse moves, move the item\n    $('body').on('mousemove', moveItem);\n\n    // When the mouse button is released, drop the item\n    $('body').on('mouseup', stopTracking);\n\n    // Moves the item\n    function moveItem(e) {\n      // Set the item's top and left coordinate\n      // based on the mouse position\n      item.css({\n        top: Math.floor((e.pageY - shiftY) / gridSize) * gridSize,\n        left: Math.floor((e.pageX - shiftX) / gridSize) * gridSize\n      });\n    }\n\n    // Unbind our body-level mouse events so we\n    // don't run out of memory!\n    function stopTracking() {\n      $('body').off('mousemove', moveItem);\n      $('body').off('mouseup', stopTracking);\n    }\n  });\n};\n","// A demo showing how you might reorder items in a\n// list using drag/drop\napp.reorderItemsPage = function () {\n  // Bind to any reorderable list items\n  $('.reorderable-list-item').mousedown(function (e) {\n    // Get the item we are moving\n    var item = $(this);\n\n    // Give it a class to make it look distinct\n    item.addClass('reordering-list-item');\n\n    // Disable text selection when dragging\n    $(document).on('selectstart dragstart', cancelTextSelection);\n\n    // When the mouse is up, we are all done!\n    $('body').on('mouseup', doneReordering);\n\n    // When the mouse moves, look into reordering\n    $('body').on('mousemove', reorder);\n\n    // Jus cancels the event\n    function cancelTextSelection(e) {\n      e.preventDefault();\n      return false;\n    }\n\n    // Determine if the specified mouse-y coordinate\n    // should make us perform a move up\n    function shouldMoveUp(y) {\n      var offset = item.prev().offset();\n\n      return offset && offset.top > y;\n    }\n\n    // Determine if the specified mouse-y coordinate\n    // should make us perform a move down\n    function shouldMoveDown(y) {\n      var next = item.next();\n      var offset = next.offset();\n\n      return offset && offset.top + next.height() < y;\n    }\n\n    // The mouse is moving... check to see if we need\n    // to reorder things, and if so, reorder!\n    function reorder(e) {\n      if (shouldMoveUp(e.pageY)) {\n        item.insertBefore(item.prev());\n      } else if (shouldMoveDown(e.pageY)) {\n        item.insertAfter(item.next());\n      }\n\n      return false;\n    }\n\n    // Clean up all of our event binding when the drag\n    // /reorder is completed\n    function doneReordering() {\n      item.removeClass('reordering-list-item');\n      $('body').off('mouseup', doneReordering);\n      $('body').off('mousemove', reorder);\n      $(document).off('selectstart dragstart', cancelTextSelection);\n    }\n  });\n};\n","app.routingPage = function () {\n\n  // Our router\n  var r = Rlite();\n\n  // Default route\n  r.add('', showUsers);\n\n  // #users\n  r.add('users', showUsers);\n\n  // #users/chris -> r.params.name will equal 'chris'\n  r.add('users/:name', function (r) {\n    showUser(r.params.name);\n  });\n\n  function showUsers() {\n    $.get('views/users.html').done(function (html) {\n      $('.main-content').html(html);\n    });\n  }\n\n  function showUser(username) {\n    $.get('views/user.html').done(function (html) {\n      var template = _.template(html, { variable: 'm' });\n\n      $('.main-content').html(template({ name: username }));\n    });\n  }\n\n  // Hash-based routing\n  function processHash() {\n    var hash = location.hash || '#';\n    r.run(hash.slice(1));\n  }\n\n  window.addEventListener('hashchange', processHash);\n  processHash();\n\n  // TODO: We could improve this in many ways.\n  //\n  // One, every time we go to the #users or #users/foo route,\n  // we are requesting the HTML again. We ought to cache them,\n  // instead into an object (or hash table).\n  //\n  // Another thing, is we are recompiling the user.html template\n  // every time we show a user... We could cache the compiled\n  // templates, too, so they are compiled once they are downloaded\n  // and never again!\n};\n","$(function () {\n  var page = $('body').data('page');\n  app[page]();\n});\n"],"sourceRoot":"/source/"}